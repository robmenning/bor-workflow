import{d as A,V as y,u as b,W as h,J as w,h as g,i as k,c as v,o as C,j as a,k as u,m as e,z as V,G as B,H as m,B as E,K as l,L as G}from"./index-D_5Czl8L.js";import{_ as I}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-Ucnv6vqi.js";import{u as J}from"./usePageTitle-DV7LzCfq.js";import{u as N}from"./usePrefectApi-5Qx1qtqi.js";import"./mapper-BPmgWoJG.js";import"./api-BmzMnXh8.js";const z=A({__name:"AutomationEdit",async setup(P){let o,r;const i=N(),c=y(),_=b(),p=h("automationId"),s=([o,r]=w(()=>i.automations.getAutomation(p.value)),o=await o,r(),o);J(`Edit Automation: ${s.name}`);const f=g(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function x(d){try{await i.automations.updateAutomation(p.value,d),l(m.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=G(t,m.error.automationUpdate);l(n,"error",{timeout:!1})}}return(d,t)=>{const n=k("p-layout-default");return C(),v(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(V),{crumbs:f.value},{actions:a(()=>[u(e(B),{to:e(m).docs.automations},{default:a(()=>t[0]||(t[0]=[E(" Documentation ")])),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(I,{automation:e(s),editing:"",onSubmit:x},null,8,["automation"])]),_:1})}}});export{z as default};
//# sourceMappingURL=AutomationEdit-CTFYqwOh.js.map
